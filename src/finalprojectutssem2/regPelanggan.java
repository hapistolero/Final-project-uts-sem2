/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalprojectutssem2;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hafiz ilham ardana
 */
public class regPelanggan extends javax.swing.JFrame {

    Cpembeli pbl[] ;
    cRegPelanggan plg[];
    int jump=0;
    
      Connection con = null;
    Statement st = null;
    ResultSet res =null;
    PreparedStatement pst = null;
    
    public regPelanggan() {
        initComponents();
        pbl = new Cpembeli[100];
         plg = new cRegPelanggan[100];
         konek();
         showplg();
    }
    
    public void konek(){
         try{
             Class.forName("com.mysql.jdbc.Driver");
               con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/apkalatmasak","root","");
               st = con.createStatement();
             st =(Statement) con.createStatement();
             JOptionPane.showMessageDialog(null,"terkoneksi");
         }catch(Exception e){
    }
    }
    
    public void showplg(){
         DefaultTableModel tb = new DefaultTableModel();
         tb.addColumn("Nama Pelanggan");
         tb.addColumn("Alamat");
         tb.addColumn("Kode Pelanggan");
         
         tabplg.setModel(tb);
         
        try{
            res = st.executeQuery("Select * from kodeplg");
             while (res.next()){
             tb.addRow(new Object[]{
             res.getString("nama"),
             res.getString("alamat"),
             res.getString("kodeplg"),
           
             });
             
             }
        }catch (Exception e){
           JOptionPane.showMessageDialog(null, "Gagal Menampilkan,,"+e.getMessage());
        }
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabplg = new javax.swing.JTable();
        back = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        ubah = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tabplg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Alamat", "Kode"
            }
        ));
        jScrollPane1.setViewportView(tabplg);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        ubah.setText("Ubah");
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ubah)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(tambah)
                    .addComponent(hapus)
                    .addComponent(ubah))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        int idx = 0;
          boolean ketemu = false;
          String id = JOptionPane.showInputDialog(this,"Masukan Nama Pelanggan");
          
                  
           for (int i = 0; i < tabplg.getRowCount(); i++) {
               idx=i;
               if (tabplg.getValueAt(i, 0).toString().equalsIgnoreCase(id)) {
                   ketemu=true;
                   
                   break;
                   
               } else {
                   JOptionPane.showMessageDialog(this, "Tungguu..");
               
           }
           
           }
           if (ketemu==true) {
               int j =JOptionPane.showConfirmDialog(this,"Yakin Dihapus?");
               if (j==0) {
                    
                    String usrID = tabplg.getValueAt(idx,0).toString();
                    jump--;
      try {
             PreparedStatement pStatement = null;
                      String sql ="DELETE from kodeplg WHERE nama=? ";
                      pStatement = con.prepareStatement(sql);
                      pStatement.setString(1, usrID);
                      int intTambah= pStatement.executeUpdate();
                      DefaultTableModel model = (DefaultTableModel)tabplg.getModel();
                    model.removeRow(idx);
               if (intTambah>0)
                    JOptionPane.showMessageDialog(this,
                    "Hapus data sukses", "Informasi",
                    JOptionPane.INFORMATION_MESSAGE);
                    

                else
                    JOptionPane.showMessageDialog(this,
                    "Hapus data gagal", "Informasi",
                    JOptionPane.INFORMATION_MESSAGE);
                    pStatement.close();
                    showplg();
                    }
                    catch (SQLException e){
                    System.out.println("koneksi gagal " + e.toString());
                }
                   
                   
                  
                   
               }
           }
        
       
                                      
    }//GEN-LAST:event_hapusActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        String m = JOptionPane.showInputDialog(this, "Masukan Nama Pelanggan");
        String k = JOptionPane.showInputDialog(this, "Masukan Alamat");
        String kod = JOptionPane.showInputDialog(this, "Masukan Kode");

  
        
        boolean ada = false;
        for (int i = 0; i < jump; i++) {
            if(plg[i].getNama().equalsIgnoreCase(m)){
                ada = true;
                break;
            }
        }
        if(ada==true){
            JOptionPane.showMessageDialog(this, "Barang Sudah Ada");
        }
        else{
           
           
            

           
            plg[jump]= new cRegPelanggan(m,k,kod);
           
            
             String row[][]= new String[1][4];
            row [0][0] = plg[jump].getNama();
            row [0][1] = plg[jump].getAlamat();
            row [0][2] = plg[jump].getKode();
           
            DefaultTableModel model = (DefaultTableModel)tabplg.getModel();  
            model.addRow(row[0]);
            jump++;
             try{
            
               Class.forName("com.mysql.jdbc.Driver");
               con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/apkalatmasak","root","");
               st = con.createStatement();
               String save = "insert into kodeplg values( '" +m+"','" +k+"','"+kod+"')";
               st = con.createStatement();
               int SA = st.executeUpdate(save);
               JOptionPane.showMessageDialog(this, "update Berhasil");
              
            
       }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Sudah ada","Pesan",JOptionPane.WARNING_MESSAGE);
        }
            
            
          
    }
            
           
    }//GEN-LAST:event_tambahActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
       String id = JOptionPane.showInputDialog(this, "Masukan Nama Pelanggan");
       String  hrg = JOptionPane.showInputDialog(this, "Masukan Alamat Baru");

      
      int idx = 0;
          boolean ketemu = false;
           for (int i = 0; i < tabplg.getRowCount(); i++) {
               idx=i;
               if (tabplg.getValueAt(i, 0).toString().equalsIgnoreCase(id)) {
                   ketemu=true;
                   break;
                   
               } else {
                   JOptionPane.showMessageDialog(this, "tunguu...");
               
               }
           
           }
           if (ketemu==true) { 
               
               int j =JOptionPane.showConfirmDialog(this,"Yakin Diganti?");
           
               if (j==0) {
                     
            String usrID = tabplg.getValueAt(idx,1).toString();
                   System.out.println(usrID);
        String sql ="update kodeplg set alamat='"+hrg+
                "' where nama='"+id+"'";
        try {
            st = con.createStatement();
            st.executeUpdate(sql);
            showplg();
            DefaultTableModel model = (DefaultTableModel)tabplg.getModel();
            model.setValueAt(hrg, idx, 1);
            
            JOptionPane.showMessageDialog(null, "Data telah terupdate");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error "+e.getMessage());
        }
           
                    
       
                    
                  
                   
     
                   }
           }
    }//GEN-LAST:event_ubahActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
         TokoAlatMasakApk rgf = new TokoAlatMasakApk(); //memanggil form lain
       rgf.setVisible(true);//memperlihatkan form
       rgf.pack();//set size frame
       rgf.setLocationRelativeTo(null);//mengatur lokasi frame
       rgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//close frame
       this.dispose();//membersihkan jendela frame
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(regPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(regPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(regPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(regPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new regPelanggan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton hapus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabplg;
    private javax.swing.JButton tambah;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
private Object[][] getData(){
Object[][] data1= null;
try {
   Statement st = con.createStatement();
    ResultSet rs = st.executeQuery("Select * from kodeplg");
       rs.last();
       int rowCount= rs.getRow();
       rs.beforeFirst();
       data1= new Object[rowCount][3];
       int no=-1;
       while (rs.next()) {
       no=no+1;
       data1[no][0]=rs.getString("nama");
       data1[no][1]=rs.getString("alamat");
       data1[no][2]=rs.getString("kodeplg");
       
     }
     st.close();
  }
      catch (SQLException e){
      System.out.println("koneksi gagal " +
     e.toString());
}
       return data1;
}
     private void tampilTabel() {
String[] columnNames = {"nama", "alamat", "kodeplg"};
 tabplg = new JTable(getData(), columnNames);
jScrollPane1.setViewportView(tabplg);
}
}


